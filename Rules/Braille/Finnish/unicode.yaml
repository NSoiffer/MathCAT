---
# Finnish characters
#
# Finnish specification for 6 dot math braille on the braille authority's web page (https://www.pistekirjoitus.fi/julkaisut/matematiikka-ja-tietotekniikka/) titled "Matematiikan, fysiikan ja kemain pistemerkinn├цt". Roughly translates to "Braille for mathematics, physics and chemistry." These rules are based on the edition published in 2022.
#
# Some chars that originally came from an Excel spreadsheet created by Georgios Kouroupetroglou (see https://access.uoa.gr/mathbraille), based on Swedish characters.
# 
# The UEB translation makes use of some non-braille chars as flags
#    L -- what follows is a letter
#    N -- what follows is a digit
#    C -- precedes L for capital letters
#    G -- precedes L for Greek Letters (after C for capitals)
#  Typeface Indicators ("typeforms")
#    B bold, I Italic, S Sans-serif, T script, D, Fraktur, ­Юћ╣ blackboard-bold
#    the type face indicators can be combined with B (first) and I (second)
#  Standing alone chars:
#    Any character which acts as a standing alone character (e.g, "{") needs each braille symbol to be labeled
#    o -- opening/left side, c -- closing/right side, b -- both open and close (e.g, '"')

 - "0": [t: "NРаџ"]                # 0x0030 (digit zero)
 - "1": [t: "NРаЂ"]                # 0x0031 (digit one)
 - "2": [t: "NРаЃ"]                # 0x0032 (digit two)
 - "3": [t: "NРаЅ"]                # 0x0033 (digit three)
 - "4": [t: "NРаЎ"]                # 0x0034 (digit four)
 - "5": [t: "NРаЉ"]                # 0x0035 (digit five)
 - "6": [t: "NРаІ"]                # 0x0036 (digit six)
 - "7": [t: "NРаЏ"]                # 0x0037 (digit seven)
 - "8": [t: "NРаЊ"]                # 0x0038 (digit eight)
 - "9": [t: "NРаі"]                # 0x0039 (digit nine)
 - "РЅѕ": [t: "WРаИРаХ"]                # 0x2248 (almost equal to)
 - "РІЁ": [t: "WРаё"]                # 0x22C5 (dot,and times)
 - "Рїф": [t: "РаБ"]                # 0x232A (right angle bracket ( angular parenthesis ))
 - "РЪе": [t: "Ра▒"]                # 0x27E8 (left angle bracket ( angular parenthesis ))


 - " ":                        # 0x20 (Space)
     - test:
        if: "self::m:mn"
        then: [t: "NРаё"]
        else: [t: "W"]
 - "┬а":                        # 0xa0 (Non-breaking Space)
     - test:
        - if: "self::m:mn"
          then: [t: "NРаё"]
        - else_if: "following-sibling::*[1][@class='MathML-unit' or BaseNode(.)[@class='MathML-unit']]"
          then: [t: "­Юљќ"]
          else: [t: "W"]
 - ",":                        # 0x2c (Comma)
     - test:
        if: "self::m:mn"
        then: [t: "NРаѓ"]
        else: [t: ",W"]

 - "РЂА": [t: ""]                         # 0x2061РЂА (invisible function apply)
    #- test:
        #if:
        #- "preceding-sibling::*[1][self::m:mi and substring(., string-length(.), 1)!='┬а'] and " # avoid scripted function names and one that end with spaces
        #- "following-sibling::*[1][self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyz', '') = '']" # GTM 9.3.2
        #then: [t: "W"]
        #else: [t: ""]

 - "РЂб": [t: ""]                        # 0x2062 (invisible times)
    #- test:
        #if: # GTM 9.3.3 (not very clear in rule, but the function name has to start with a lower case latin char ['no indicators'])
        #- "parent::m:mrow and "
        #- "preceding-sibling::*[1]["
        #- "           (self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '') = '') or "
        #- "           (self::m:mrow and translate(*[last()], 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '') = '')] and"
        #- "  following::*[1][self::m:mrow and count(*)=3 and "   # look for function apply
        #- "     *[2][text()='РЂА'] and *[1][self::m:mi and translate(., 'abcdefghijklmnopqrstuvwxyz', '') = '']]" 
        #then: [t: "W"]
        #else: [t: ""]
 - "РЂБ": [t: ""]                 # 0x2063РЂА (invisible separator)
 - "РЂц": [t: ""]                 # 0x2064 (invisible plus)

 # we stick the drop numbers into the private use area for consistency (they are labeled differently so dot-6 can inserted)
 - "\ue000": [t: "nРа┤"]               # 0 
 - "\ue001": [t: "nРаѓ"]               # 1 
 - "\ue002": [t: "nРає"]               # 2 
 - "\ue003": [t: "nРањ"]               # 3 
 - "\ue004": [t: "nРа▓"]               # 4 
 - "\ue005": [t: "nРаб"]               # 5 
 - "\ue006": [t: "nРаќ"]               # 6 
 - "\ue007": [t: "nРаХ"]               # 7 
 - "\ue008": [t: "nРад"]               # 8 
 - "\ue009": [t: "nРаћ"]               # 9 

 - "a": [t: "LРаЂ"]               # 0x61 
 - "b": [t: "LРаЃ"]               # 0x62 
 - "c": [t: "LРаЅ"]               # 0x63 
 - "d": [t: "LРаЎ"]               # 0x64 
 - "e": [t: "LРаЉ"]               # 0x65 
 - "f": [t: "LРаІ"]               # 0x66 
 - "g": [t: "LРаЏ"]               # 0x67 
 - "h": [t: "LРаЊ"]               # 0x68 
 - "i": [t: "LРаі"]               # 0x69 
 - "j": [t: "LРаџ"]               # 0x6a 
 - "k": [t: "LРаЁ"]               # 0x6b 
 - "l": [t: "LРаЄ"]               # 0x6c 
 - "m": [t: "LРаЇ"]               # 0x6d 
 - "n": [t: "LРаЮ"]               # 0x6e 
 - "o": [t: "LРаЋ"]               # 0x6f 
 - "p": [t: "LРаЈ"]               # 0x70 
 - "q": [t: "LРаЪ"]               # 0x71 
 - "r": [t: "LРаЌ"]               # 0x72 
 - "s": [t: "LРај"]               # 0x73 
 - "t": [t: "LРаъ"]               # 0x74 
 - "u": [t: "LРаЦ"]               # 0x75 
 - "v": [t: "LРаД"]               # 0x76 
 - "w": [t: "LРа║"]               # 0x77 
 - "x": [t: "LРаГ"]               # 0x78 
 - "y": [t: "LРай"]               # 0x79 
 - "z": [t: "LРах"]               # 0x7a
 - "├Ц": [t: "Lp16;"]           # FI: Finnish alphabet
 - "├ц": [t: "Lp345;"]           # FI: Finnish alphabet
 - "├Х": [t: "Lp246;"]           # FI: Finnish alphabet

 - "─Љ": [t: "LРа«"]
 - "├А": [t: "LРаћLРаЂ"]
 - "├а": [t: "LРа░LРаЂ"]
 - "р║Б": [t: "LРабLРаЂ"]
 - "├Б": [t: "LРацLРаЂ"]
 - "р║А": [t: "LРааLРаЂ"]
 - "├б": [t: "LРаА"]
 - "р║Ц": [t: "LРаћLРаА"]
 - "р║Д": [t: "LРа░LРаА"]
 - "р║Е": [t: "LРабLРаА"]
 - "р║Ф": [t: "LРацLРаА"]
 - "р║Г": [t: "LРааLРаА"]
 - "─Ѓ": [t: "LРаю"]
 - "р║»": [t: "LРаћLРаю"]
 - "р║▒": [t: "LРа░LРаю"]
 - "р║│": [t: "LРабLРаю"]
 - "р║х": [t: "LРацLРаю"]
 - "р║и": [t: "LРааLРаю"]
 - "├Е": [t: "LРаћLРаЉ"]
 - "├е": [t: "LРа░LРаЉ"]
 - "р║╗": [t: "LРабLРаЉ"]
 - "р║й": [t: "LРацLРаЉ"]
 - "р║╣": [t: "LРааLРаЉ"]
 - "├ф": [t: "LРаБ"]
 - "р║┐": [t: "LРаћLРаБ"]
 - "р╗Ђ": [t: "LРа░LРаБ"]
 - "р╗Ѓ": [t: "LРабLРаБ"]
 - "р╗Ё": [t: "LРацLРаБ"]
 - "р╗Є": [t: "LРааLРаБ"]
 - "├Г": [t: "LРаћLРаі"]
 - "├г": [t: "LРа░LРаі"]
 - "р╗Ѕ": [t: "LРабLРаі"]
 - "─Е": [t: "LРацLРаі"]
 - "р╗І": [t: "LРааLРаі"]
 - "├│": [t: "LРаћLРаЋ"]
 - "├▓": [t: "LРа░LРаЋ"]
 - "р╗Ј": [t: "LРабLРаЋ"]
 - "├х": [t: "LРацLРаЋ"]
 - "р╗Ї": [t: "LРааLРаЋ"]
 - "├┤": [t: "LРа╣"]
 - "р╗Љ": [t: "LРаћLРа╣"]
 - "р╗Њ": [t: "LРа░LРа╣"]
 - "р╗Ћ": [t: "LРабLРа╣"]
 - "р╗Ќ": [t: "LРацLРа╣"]
 - "р╗Ў": [t: "LРааLРа╣"]
 - "кА": [t: "LРаф"]
 - "р╗Џ": [t: "LРаћLРаф"]
 - "р╗Ю": [t: "LРа░LРаф"]
 - "р╗Ъ": [t: "LРабLРаф"]
 - "р╗А": [t: "LРацLРаф"]
 - "р╗Б": [t: "LРааLРаф"]
 - "├║": [t: "LРаћLРаЦ"]
 - "├╣": [t: "LРа░LРаЦ"]
 - "р╗Д": [t: "LРабLРаЦ"]
 - "┼Е": [t: "LРацLРаЦ"]
 - "р╗Ц": [t: "LРааLРаЦ"]
 - "к░": [t: "LРа│"]
 - "р╗Е": [t: "LРаћLРа│"]
 - "р╗Ф": [t: "LРа░LРа│"]
 - "р╗Г": [t: "LРабLРа│"]
 - "р╗»": [t: "LРацLРа│"]
 - "р╗▒": [t: "LРааLРа│"]
 - "├й": [t: "LРаћLРай"]
 - "р╗│": [t: "LРа░LРай"]
 - "р╗и": [t: "LРабLРай"]
 - "р╗╣": [t: "LРацLРай"]
 - "р╗х": [t: "LРааLРай"]

 - "─љ": [t: "CLРа«"]
 - "├Ђ": [t: "CLРаћ­ЮЉљLРаЂ"]
 - "├ђ": [t: "CLРа░­ЮЉљLРаЂ"]
 - "р║б": [t: "CLРаб­ЮЉљLРаЂ"]
 - "├Ѓ": [t: "CLРац­ЮЉљLРаЂ"]
 - "р║а": [t: "CLРаа­ЮЉљLРаЂ"]
 - "├ѓ": [t: "CLРаА"]
 - "р║ц": [t: "CLРаћ­ЮЉљLРаА"]
 - "р║д": [t: "CLРа░­ЮЉљLРаА"]
 - "р║е": [t: "CLРаб­ЮЉљLРаА"]
 - "р║ф": [t: "CLРац­ЮЉљLРаА"]
 - "р║г": [t: "CLРаа­ЮЉљLРаА"]
 - "─ѓ": [t: "CLРаю"]
 - "р║«": [t: "CLРаћ­ЮЉљLРаю"]
 - "р║░": [t: "CLРа░­ЮЉљLРаю"]
 - "р║▓": [t: "CLРаб­ЮЉљLРаю"]
 - "р║┤": [t: "CLРац­ЮЉљLРаю"]
 - "р║Х": [t: "CLРаа­ЮЉљLРаю"]
 - "├Ѕ": [t: "CLРаћ­ЮЉљLРаЉ"]
 - "├ѕ": [t: "CLРа░­ЮЉљLРаЉ"]
 - "р║║": [t: "CLРаб­ЮЉљLРаЉ"]
 - "р║╝": [t: "CLРац­ЮЉљLРаЉ"]
 - "р║И": [t: "CLРаа­ЮЉљLРаЉ"]
 - "├і": [t: "CLРаБ"]
 - "р║Й": [t: "CLРаћ­ЮЉљLРаБ"]
 - "р╗ђ": [t: "CLРа░­ЮЉљLРаБ"]
 - "р╗ѓ": [t: "CLРаб­ЮЉљLРаБ"]
 - "р╗ё": [t: "CLРац­ЮЉљLРаБ"]
 - "р╗є": [t: "CLРаа­ЮЉљLРаБ"]
 - "├Ї": [t: "CLРаћ­ЮЉљLРаі"]
 - "├ї": [t: "CLРа░­ЮЉљLРаі"]
 - "р╗ѕ": [t: "CLРаб­ЮЉљLРаі"]
 - "─е": [t: "CLРац­ЮЉљLРаі"]
 - "р╗і": [t: "CLРаа­ЮЉљLРаі"]
 - "├Њ": [t: "CLРаћ­ЮЉљLРаЋ"]
 - "├њ": [t: "CLРа░­ЮЉљLРаЋ"]
 - "р╗ј": [t: "CLРаб­ЮЉљLРаЋ"]
 - "├Ћ": [t: "CLРац­ЮЉљLРаЋ"]
 - "р╗ї": [t: "CLРаа­ЮЉљLРаЋ"]
 - "├ћ": [t: "CLРа╣"]
 - "р╗љ": [t: "CLРаћ­ЮЉљLРа╣"]
 - "р╗њ": [t: "CLРа░­ЮЉљLРа╣"]
 - "р╗ћ": [t: "CLРаб­ЮЉљLРа╣"]
 - "р╗ќ": [t: "CLРац­ЮЉљLРа╣"]
 - "р╗ў": [t: "CLРаа­ЮЉљLРа╣"]
 - "ка": [t: "CLРаф"]
 - "р╗џ": [t: "CLРаћ­ЮЉљLРаф"]
 - "р╗ю": [t: "CLРа░­ЮЉљLРаф"]
 - "р╗ъ": [t: "CLРаб­ЮЉљLРаф"]
 - "р╗а": [t: "CLРац­ЮЉљLРаф"]
 - "р╗б": [t: "CLРаа­ЮЉљLРаф"]
 - "├џ": [t: "CLРаћ­ЮЉљLРаЦ"]
 - "├Ў": [t: "CLРа░­ЮЉљLРаЦ"]
 - "р╗д": [t: "CLРаб­ЮЉљLРаЦ"]
 - "┼е": [t: "CLРац­ЮЉљLРаЦ"]
 - "р╗ц": [t: "CLРаа­ЮЉљLРаЦ"]
 - "к»": [t: "CLРа│"]
 - "р╗е": [t: "CLРаћ­ЮЉљLРа│"]
 - "р╗ф": [t: "CLРа░­ЮЉљLРа│"]
 - "р╗г": [t: "CLРаб­ЮЉљLРа│"]
 - "р╗«": [t: "CLРац­ЮЉљLРа│"]
 - "р╗░": [t: "CLРаа­ЮЉљLРа│"]
 - "├Ю": [t: "CLРаћ­ЮЉљLРай"]
 - "р╗▓": [t: "CLРа░­ЮЉљLРай"]
 - "р╗Х": [t: "CLРаб­ЮЉљLРай"]
 - "р╗И": [t: "CLРац­ЮЉљLРай"]
 - "р╗┤": [t: "CLРаа­ЮЉљLРай"]

 - "A": [t: "CLРаЂ"]              # 0x41 
 - "B":                         # 0x42 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЃ"]
        else: [t: "CLРаЃ"]
 - "C":                         # 0x43 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЅ"]
        else: [t: "CLРаЅ"]
 - "D": [t: "CLРаЎ"]              # 0x44 
 - "E": [t: "CLРаЉ"]              # 0x45 
 - "F": [t: "CLРаІ"]              # 0x46 
 - "G": [t: "CLРаЏ"]              # 0x47 
 - "H":                         # 0x48 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЊ"]
        else: [t: "CLРаЊ"]
 - "I":                         # 0x49 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаі"]
        else: [t: "CLРаі"]
 - "J": [t: "CLРаџ"]              # 0x4a 
 - "K":                         # 0x4b 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЁ"]
        else: [t: "CLРаЁ"]
 - "L": [t: "CLРаЄ"]              # 0x4c 
 - "M": [t: "CLРаЇ"]              # 0x4d 
 - "N":                         # 0x4e 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЮ"]
        else: [t: "CLРаЮ"]
 - "O":                         # 0x4f 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЋ"]
        else: [t: "CLРаЋ"]
 - "P":                         # 0x50 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЈ"]
        else: [t: "CLРаЈ"]
 - "Q": [t: "CLРаЪ"]              # 0x51 
 - "R": [t: "CLРаЌ"]              # 0x52 
 - "S":                         # 0x53 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРај"]
        else: [t: "CLРај"]
 - "T": [t: "CLРаъ"]              # 0x54 
 - "U":                         # 0x55 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаЦ"]
        else: [t: "CLРаЦ"]
 - "V":                         # 0x56 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРаД"]
        else: [t: "CLРаД"]
 - "W":                         # 0x57 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРа║"]
        else: [t: "CLРа║"]
 - "X": [t: "CLРаГ"]              # 0x58 
 - "Y":                         # 0x59 
    - test:
        if: "@data-chem-element"
        then: [t: "­ЮљХLРай"]
        else: [t: "CLРай"]
 - "Z": [t: "CLРах"]              # 0x5a
 - "├Ё": [t: "CLp16;"]           # FI: Finnish alphabet
 - "├ё": [t: "CLp345;"]           # FI: Finnish alphabet
 - "├ќ": [t: "CLp246;"]           # FI: Finnish alphabet

 - "╬▒": [t: "GLРаЂ"]              # 0x3b1 
 - "╬▓": [t: "GLРаЃ"]              # 0x3b2 
 - "╬│": [t: "GLРаЏ"]              # 0x3b3 
 - "╬┤": [t: "GLРаЎ"]              # 0x3b4 
 - "╬х": [t: "GLРаЉ"]              # 0x3b5 
 - "╬Х": [t: "GLРах"]              # 0x3b6 
 - "╬и": [t: "GLp345;"]           # 0x3b7 
 - "╬И": [t: "GLРа╣"]              # 0x3b8 
 - "╬╣": [t: "GLРаі"]              # 0x3b9 
 - "╬║": [t: "GLРаЁ"]              # 0x3ba 
 - "╬╗": [t: "GLРаЄ"]              # 0x3bb 
 - "╬╝": [t: "GLРаЇ"]              # 0x3bc 
 - "╬й": [t: "GLРаЮ"]              # 0x3bd 
 - "╬Й": [t: "GLРаГ"]              # 0x3be 
 - "╬┐": [t: "GLРаЋ"]              # 0x3bf 
 - "¤ђ": [t: "GLРаЈ"]              # 0x3c0 
 - "¤Ђ": [t: "GLРаЌ"]              # 0x3c1 
 - "¤ѓ": [t: "GLРај"]              # 0x3c2 
 - "¤Ѓ": [t: "GLРај"]              # 0x3c3 
 - "¤ё": [t: "GLРаъ"]              # 0x3c4 
 - "¤Ё": [t: "GLp13456;"]              # 0x3c5 
 - "¤є": [T: "GLРаІ"]              # 0x3c6 
 - "¤Ћ": [T: "GLРаІ"]              # 0x3c6 
 - "¤Є": [T: "GLp125;"]              # 0x3c7 
 - "¤ѕ": [t: "GLp12346;"]              # 0x3c8 
 - "¤Ѕ": [t: "GLp245;"]             # 0x3c9

 - "╬Љ": [t: "CGLРаЂ"]             # 0x391 
 - "╬њ": [t: "CGLРаЃ"]             # 0x392 
 - "╬Њ": [t: "CGLРаЏ"]             # 0x393 
 - "╬ћ": [t: "CGLРаЎ"]             # 0x394 
 - "╬Ћ": [t: "CGLРаЉ"]             # 0x395 
 - "╬ќ": [t: "CGLРах"]             # 0x396 
 - "╬Ќ": [t: "CGLp345;"]          # 0x397 
 - "╬ў": [t: "CGLРа╣"]             # 0x398 
 - "╬Ў": [t: "CGLРаі"]             # 0x399 
 - "╬џ": [t: "CGLРаЁ"]             # 0x39a 
 - "╬Џ": [t: "CGLРаЄ"]             # 0x39b 
 - "╬ю": [t: "CGLРаЇ"]             # 0x39c 
 - "╬Ю": [t: "CGLРаЮ"]             # 0x39d 
 - "╬ъ": [t: "CGLРаГ"]             # 0x39e 
 - "╬Ъ": [t: "CGLРаЋ"]             # 0x39f 
 - "╬а": [t: "CGLРаЈ"]             # 0x3a0 
 - "╬А": [t: "CGLРаЌ"]             # 0x3a1 
 - "╬б": [t: "CGLРај"]             # 0x3a2 
 - "╬Б": [t: "CGLРај"]             # 0x3a3 
 - "╬ц": [t: "CGLРаъ"]             # 0x3a4 
 - "╬Ц": [t: "CGLp13456;"]         # 0x3a5 
 - "╬д": [t: "CGLРаІ"]             # 0x3a6 
 - "╬Д": [T: "CGLp125;"]             # 0x3a7 
 - "╬е": [t: "CGLp12346;"]             # 0x3a8 
 - "╬Е": [t: "CGLp245;"]             # 0x3a9

# FI: These could be removed, because they are the same as above?
 - "┬х": [t: "GLРаЇ"]              # 0x00B5 (Micro (Greek mu))
 - "Рёд": [t: "CGLp245;"]             # 0x2126 (Ohm sign (capital Greek omega))
 - "Рѕє": [t: "CGLРаЎ"]             # 0x2206 (Increment (capital Greek delta))
 - "РѕЈ": [t: "CGLРаЈ"]             # 0x220F (Product (capital Greek pi))
 - "РѕЉ": [t: "CGLРај"]             # 0x2211 (Sum (capital Greek sigma))

 - "!": [t: "Ра▓"]                # 0x0021 (exclamation point) # FI: marked up here as the factorial
# - "!": [t: "p6;Ра▓"]                # FI: braille for the factorial, probably requires a test
 - "$": [t: "p2346;"]                # 0x0024 (dollar sign)
 - "%": [t: "Ра╣"]                # 0x0025 (percent sign)
 - "&": [t: "Ра»"]                # 0x0026 (ampersand (and, logical product))
 - "(": [t: "("]                # 0x0028 (left parenthesis -- handled later)
 - ")": [t: ")"]                # 0x0029 (right parenthesis -- handled later)
 - "+": [t: "WРаќ"]                # 0x002B (regular plus)
 - "-": [t: "WРац"]                # 0x002D (hyphen)
 - ".": [t: "Раё"]                # 0x002E # FI: used as a thousand separator
 - "/": [t: "WРаї"]                # 0x002F (diagonal fraction line)

 - "W:": [t: "Рањ"]                # 0x003A (colon)
 - "<": [t: "WРаБW"]                # 0x003C (less than sign)
 - "=": [t: "WРаХ"]                # 0x003D (regular equals sign)
 - ">": [t: "WРа▒W"]                # 0x003E (greater than sign ( regular ))
 - "[": [t: "Раи"]                # 0x005B (left square bracket)
 - "]": [t: "РаЙ"]                # 0x005D (right square bracket)
 - "{": [t: "РаФ"]                # 0x007B ( left curly brace)
 - "|": [t: "РаИ"]                # 0x007C (vertical bar)
 - "}": [t: "Ра╗"]                # 0x007D (right curly brace)
 - "~": [t: "p46;p2356;"]                # 0x007E (simple tilde (is related to, is similar)) FI: in context of geometry. Tilde has different braille in general text.
 - "┬б": [t: "p234;p1345;p2345;"]                # 0x00A2 (cent)
 - "┬Б": [t: "РаЄ"]                # 0x00A3 (pound sterling)
 - "┬Д": [t: "Ра╝"]                # 0x00A7 (single section mark)
 - "┬г": [t: "WРа│Ра▓"]                # 0x00AC (not (negation in formal logic))
 - "┬░": [t: "Ра┤"]                # 0x00B0 (degree sign)
 - "┬▒": [t: "WРаќРац"]                # 0x00B1 (plus or minus)
 - "├Ќ": [t: "WРа░Раё"]                # 0x00D7 (vector or cross product)
 - "Рђ░": [t: "РањРа╣"]                # 0x2030 (per mille sign)
 - "Рђ▓": [t: "Раћ"]                # 0x2032 (apostrophe)
 - "Рђ│": [t: "РаћРаћ"]                # 0x2033 (double prime)
 - "Рѓг": [t: "p4;p15;"]                # 0x20AC (euro)
 - "Рєљ": [t: "WРаБРацW"]                # 0x2190 (left pointing arrow)
 - "Рєњ": [t: "WРацРа▒W"]               # 0x2192 (right pointing arrow)
 - "Рєћ": [t: "WРаБРацРа▒W"]                # 0x2194 (horizontal two-way arrow)
 - "РєЌ": [t: "WРаћРа▒W"]                # 0x2197 (north east arrow)
 - "Рєў": [t: "WРабРа▒W"]                # 0x2198 (south east arrow)

# FI: not in Finnish specification
#  - "Рєџ": [t: "РаљРаБРац"]                # 0x219A (leftwards arrow with stroke)
#  - "РєЏ": [t: "РаљРацРа▒"]                # 0x219B (rightwards arrow with stroke)

 - "РЄЇ": [t: "WРаљРаБРацРацW"]                # 0x21CD (leftwards double arrow with stroke)
 - "РЄј": [t: "WРаљРаБРацРацРа▒W"]                # 0x21CE (left right double arrow with stroke (not equivalent))
 - "РЄЈ": [t: "WРаљРацРацРа▒W"]                # 0x21CF (rightwards double arrow with stroke (does not imply))

 - "РЄљ": [t: "WРаБРацРацW"]                # 0x21D0 (leftwards double arrow)
 - "РЄњ": [t: "WРацРацРа▒W"]                # 0x21D2 (rightwards double arrow (implication))
 - "РЄћ": [t: "WРаБРацРацРа▒W"]                # 0x21D4 (left right double arrow (double implication, equivalence))
 - "Рѕђ": [t: "Ра│Раѓ"]                # 0x2200 (universal quantifier (for all, for each, for every))
 - "РѕЃ": [t: "Ра│Раб"]                # 0x2203 (existential quantifier (there exists, for some))
 - "Рѕё": [t: "Ра│РаљРаб"]                # 0x2204 (does not exist)
 - "РѕЁ": [t: "WРа│Ра┤"]                # 0x2205 (empty set ( represented by zero with vertical or oblique bar through it))
 - "РѕЄ": [t: "РаИРа▓"]                # 0x2207 (del (nabla, gradient) , inverted triangle)
 - "Рѕѕ": [t: "WРа│Раћ"]                # 0x2208 (membership (is an element of))
 - "РѕЅ": [t: "WРа│РаљРаћ"]                # 0x2209 (is not an element of)

# FI: Same as the Greek letters. Are these needed?
#  - "РѕЈ": [t: "РаИРаЈ"]                # 0x220F (n-ary product)
#  - "РѕЉ": [t: "РаИРај"]                # 0x2211 (n-ary summation)

 - "Рѕќ": [t: "WРа│РаА"]                # 0x2216 (back slash (FI: only meaning in Finnish is set difference))
 - "Рѕў": [t: "WРа│Ра┐"]                # 0x2218 (hollow dot)
 - "Рѕъ": [t: "Ра┐"]                # 0x221E (infinity)
 - "РѕЪ": [t: "РаЌРаИРаф"]                # 0x221F (right angle)
 - "Рѕа": [t: "РаИРаф"]                # 0x2220 (angle)
 - "РѕА": [t: "РаИРаф"]                # 0x2221 (angle with interior arc)
 - "РѕЦ": [t: "WРаИРаИW"]                # 0x2225 (is parallel to)
 - "Рѕд": [t: "WРаљРаИРаИW"]                # 0x2226 (is not parallel to)
 - "РѕД": [t: "WРа│РаЕW"]                # 0x2227 (logical product (and, meet))
 - "Рѕе": [t: "WРа│РагW"]                # 0x2228 (logical sum (join,or))
 - "РѕЕ": [t: "WРа│Рад"]                # 0x2229 (intersection sign ( cap ))
 - "Рѕф": [t: "WРа│Раќ"]                # 0x222A (union sign)
 - "РѕФ": [t: "Ра«"]                # 0x222B (single integral)
 - "РЅЂ": [t: "Раљp46;p2356;"]                # 0x2241 (not tilde) FI: Not in the specification, so this is a construction. Used in the context of geometry. Tilde has different braille in general text.
 - "РЅЁ": [t: "WРа░РаХ"]                # 0x2245 (equals sign under tilde)
 - "РЅѕ": [t: "WРаИРаХ"]                # 0x2248 (double tilde, almost equal to)
 - "РЅЎ": [t: "WРањРањ"]                # 0x2259 (caret over equals sign)
 - "РЅа": [t: "WРаљРаХ"]                # 0x2260 (not equal to)
 - "РЅА": [t: "WРа░РаХ"]                # 0x2261 (identify (is congruent to, is identical with))
 - "РЅб": [t: "WРаљРа░РаХ"]                # 0x2262 (is not identical to) FI: Not in the specification, but can be used.
 - "РЅц": [t: "WРаБРаХW"]                # 0x2264 (bar under less than sign (is less than or equal to))
 - "РЅЦ": [t: "WРа▒РаХW"]                # 0x2265 (bar under greater than sign (is greater than or equal to))
 - "РЅф": [t: "WРаБРаБW"]                # 0x226A (nest of two less than signs with straight sides (is small compared with))
 - "РЅФ": [t: "WРа▒Ра▒W"]                # 0x226B (nest of two greater than signs with straight sides (is large compared with))
 - "РЅ«": [t: "WРаљРаБW"]                # 0x226E (not less than)
 - "РЅ»": [t: "WРаљРа▒W"]                # 0x226F (not greater than)
 - "РЅ░": [t: "WРаљРаБРаХW"]                # 0x2270 (neither less-than nor equal to) FI: Not in the specification, but can be used.
 - "РЅ▒": [t: "WРаљРа▒РаХW"]                # 0x2271 (neither greater-than nor equal to) FI: Not in the specification, but can be used.
 - "Ріѓ": [t: "WРа│Раф"]                # 0x2282 (inclusion sign ( is contained in, is a subset of ))
 - "Ріё": [t: "WРа│РаљРаф"]                # 0x2284 (not a subset of)
 - "Ріє": [t: "WРа│РаХРаф"]                # 0x2286 (bar under inclusion sign (is a subset of))
 - "РіЦ": [t: "WРа╝РаёW"]                # 0x22A5 (is perpendicular to)
 - "РІЁ": [t: "WРаё"]                # 0x22C5 (dot,and times)
 - "Рїф": [t: "Раю"]                # 0x232A (right angle bracket ( angular parenthesis ))
 - "РќА": [t: "РаФРаЪ"]                # 0x25A1 (square)
 - "РќГ": [t: "РаФРаЌ"]                # 0x25AD (rectangle)
 - "Рќ▒": [t: "РаФРаЈ"]                # 0x25B1 (parallelogram)
 - "Рќ│": [t: "РаФРаЎ"]                # 0x25B3 (regular triangle (equilateral)  )
 - "РЪе": [t: "РаБ"]                # 0x27E8 (left angle bracket ( angular parenthesis ))
 - "РфЦ": [t: "WРа▒РаБW"]                # 0x2AA5 (greater than sign followed by less than sign)
 - "РФФ": [t: "WРа╝РаДW"]                # 0x2AEB (double up tack (conditionally independent))
