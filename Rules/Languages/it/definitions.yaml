---
- include: "../../definitions.yaml"
# Lines starting with "#" are a comment
# Each definition in this file is of the form
# - name: { "...", "..." "..." }
# For numbers, 
# - name: [] "...", "..." "..." ]


# ----------------  Cardinal and Ordinal Numbers  --------------------------
# The following definitions are used to convert numbers to words
# The are mainly used for ordinals, of which there are two cases:
# 1. Regular ordinals: first, second, third, ...
# 2. Ordinals used in the denominator of fractions (e.g, one half, one third)
#    When used in the denominator of fractions, a plural version might be
#    used (e.g., two halves, two thirds)
# Although a lot of languages are regular after a few entries, for generality,
# the following lists should be filled out even though they are the same
# or easily derived from others in many languages (e.g, an 's' is added for plurals).
# The larger ordinal numbers (e.g, millionth) is used when there are only
# '0's after that decimal place (e.g., 23000000).:w

# All definitions start 0, 10, 100, etc.

# The definitions for the "ones" should extend until a regular pattern begins
#   The minimum length is 10.

# For English, a regular pattern starts at twenty
- NumbersOnes: [
         "zero", "uno", "due", "tre", "quattro", "cinque", "sei", "sette", "otto", "nove",
         "dieci", "undici", "dodici", "tredici", "quattordici", "quindici", "sedici",
         "diciassette", "diciotto", "diciannove"
    ]

- NumbersOrdinalOnes: [
         "zero", "primo", "secondo", "terzo", "quarto", "quinto", "sesto", "settimo", "ottavo", "nono",
         "decimo", "undicesimo", "dodicesimo", "tredicesimo", "quattordicesimo", "quindicesimo", "sedicesimo",
         "diciassettesimo", "diciottesimo", "diciannovesimo"
    ]

- NumbersOrdinalPluralOnes: [
         "zero", "primi", "secondi", "terzi", "quarti", "quinti", "sesti", "settimi", "ottavi", "noni",
         "decimi", "undicesimi", "dodicesimi", "tredicesimi", "quattordicesimi", "quindicesimi", "sedicesimi",
         "diciassettesimi", "diciottesimi", "diciannovesimi"
    ]

# stop when regularity begins
- NumbersOrdinalFractionalOnes: [
         "zero", "primo", "mezzo"
    ]

# stop when regularity begins
- NumbersOrdinalFractionalPluralOnes: [
         "zeri", "primi", "mezzi"
    ]


# What to use for multiples of 10
- NumbersTens: [
         "", "dieci", "venti", "trenta", "quaranta", "cinquanta", "sessanta", "settanta", "ottanta", "novanta"
    ]

- NumbersOrdinalTens: [
         "", "decimo", "ventesimo", "trentesimo", "quarantesimo", "cinquantesimo", "sessantesimo", "settantesimo", "ottantesimo", "novantesimo"
    ]

- NumbersOrdinalPluralTens: [
         "", "decimi", "ventesimi", "trentesimi", "quarantesimi", "cinquantesimi", "sessantesimi", "settantesimi", "ottantesimi", "novantesimi"
    ]


- NumbersHundreds: [
       "", "cento", "duecento", "trecento", "quattrocento", "cinquecento",
         "seicento", "settecento", "ottocento", "novecento"
    ]

- NumbersOrdinalHundreds: [
       "", "un centesimo", "duecentesimo", "trecentesimo", "quattrocentesimo", "cinquecentesimo",
         "seicentesimo", "settecentesimo", "ottocentesimo", "novecentesimo"
    ]

- NumbersOrdinalPluralHundreds: [
       "", "un centesimo", "due centesimi", "tre centesimi", "quattro centesimi", "cinque centesimi",
         "sei centesimi", "sette centesimi", "otto centesimi", "nove centesimi"
    ]
      

# At this point, hopefully the language is regular. If not, code needs to be written
- NumbersLarge: [
         "", "migliaia", "milioni", "miliardi", "trilioni", "quadrilioni",
         "quintilioni", "sestilioni", "settilioni", "ottilioni", "nonilioni",
    ]
      
- NumbersOrdinalLarge: [
         "", "millesimo", "milionesimo", "miliardesimo", "trilionesimo", "quadrilionesimo",
         "quintilionesimo", "sestilionesimo", "settilionesimo", "ottilionesimo", "nonillionesimo"
    ]
      
- NumbersOrdinalPluralLarge: [
         "", "millesimi", "milionesimi", "miliardesimi", "trilionesimi", "quadrilionesimi",
         "quintilionesimi", "sestilionesimi", "settilionesimi", "ottilionesimi", "nonilionesimi"
    ]
